# Docker Compose for Nexus Sa√∫de ML Service Monitoring Stack
version: '3.8'

services:
  # ML Service
  ml-service:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    environment:
      - DATABASE_URL=postgresql://postgres:nexus123@postgres:5432/nexus_ml
      - ML_MODEL_PATH=/app/models
      - ML_LOG_LEVEL=INFO
    volumes:
      - ../models:/app/models
      - ../logs:/app/logs
    depends_on:
      - postgres
    networks:
      - ml-monitoring
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8001/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=nexus_ml
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=nexus123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ml-monitoring

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./ml_alerts.yml:/etc/prometheus/ml_alerts.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - ml-monitoring
    depends_on:
      - ml-service

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=nexus123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboard.json:/etc/grafana/provisioning/dashboards/ml-dashboard.json
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    networks:
      - ml-monitoring
    depends_on:
      - prometheus

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - ml-monitoring

  # Node Exporter (for system metrics)
  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - ml-monitoring

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ml-monitoring

networks:
  ml-monitoring:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  redis_data:

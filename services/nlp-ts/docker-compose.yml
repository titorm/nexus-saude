version: '3.8'

services:
  nlp-service:
    build: .
    container_name: nexus-nlp-service
    ports:
      - '3007:3007'
      - '9464:9464' # Metrics port
    environment:
      - NODE_ENV=production
      - PORT=3007
      - HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=nexus_saude
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - METRICS_ENABLED=true
      - METRICS_PORT=9464
      - SPACY_MODEL=en_core_web_sm
      - TRANSFORMERS_CACHE=/app/models
      - CLINICAL_VOCAB_PATH=/app/data/clinical_vocab.json
      - CLINICAL_ABBREV_PATH=/app/data/medical_abbreviations.json
      - ICD10_PATH=/app/data/icd10_codes.json
      - SNOMED_PATH=/app/data/snomed_codes.json
      - HIPAA_AUDIT_LOGGING=true
      - HIPAA_ENCRYPTION=true
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    volumes:
      - nlp_models:/app/models
      - nlp_data:/app/data
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3007/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: nexus-postgres
    environment:
      - POSTGRES_DB=nexus_saude
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - nexus-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: nexus-grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - nexus-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nlp_models:
    driver: local
  nlp_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  nexus-network:
    driver: bridge
